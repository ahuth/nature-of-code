{"version":3,"sources":["components/Home.tsx","components/Project.tsx","hooks/useInterval.ts","hooks/useToggle.ts","components/Gaussian.tsx","utils/randomGaussian.ts","components/RandomWalk.tsx","components/App.tsx","index.ts"],"names":["Home","react_default","a","createElement","href","react_router_dom","to","Project","_ref","children","title","className","useInterval","callback","delay","run","arguments","length","undefined","callbackRef","useRef","intervalRef","useEffect","current","window","setInterval","clearInterval","useToggle","initial","_useState","useState","_useState2","Object","slicedToArray","state","setState","useCallback","val","Gaussian","canvasRef","_useToggle","_useToggle2","running","toggleRunning","_useGaussian","mean","standardDeviation","getRandom","useMemo","distribution","gaussian","ppf","Math","random","randomGaussian","step","canvas","context","getContext","beginPath","fillStyle","arc","height","PI","fill","reset","clearRect","width","useGaussian","_useGaussian2","onClick","ref","size","RandomWalk","walking","toggleWalking","_useRandomWalk","x","y","strokeStyle","lineTo","stroke","useRandomWalk","_useRandomWalk2","routingBasename","ReactDOM","render","React","basename","react_router","path","exact","component","document","getElementById"],"mappings":"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","file":"static/js/main.4a67d2f1.chunk.js","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\n\nexport default function Home() {\n  return (\n    <div>\n      <h1>The Nature of Code</h1>\n      <p>List of projects written while following along with <a href=\"https://natureofcode.com/\">The Nature of Code</a>.</p>\n      <ol>\n        <li><Link to=\"/RandomWalk\">Random Walk</Link></li>\n        <li><Link to=\"/Gaussian\">Gaussian</Link></li>\n      </ol>\n    </div>\n  );\n}\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\ntype Props = {\n  children: React.ReactNode,\n  title: React.ReactNode,\n};\n\nexport default function Project({ children, title }: Props) {\n  return (\n    <div>\n      <h1>{title}</h1>\n      <Link className=\"iblock mb2\" to=\"/\">Back to project list</Link>\n      <div>\n        {children}\n      </div>\n    </div>\n  );\n}\n","import { useEffect, useRef } from 'react';\n\nexport default function useInterval(callback: () => void, delay: number, run = true) {\n  const callbackRef = useRef(callback);\n  const intervalRef = useRef<number | undefined>(undefined);\n\n  useEffect(() => {\n    callbackRef.current = callback;\n  }, [callback]);\n\n  useEffect(() => {\n    if (callbackRef.current && run) {\n      intervalRef.current = window.setInterval(callbackRef.current, delay);\n      return () => window.clearInterval(intervalRef.current);\n    }\n  }, [delay, run]);\n}\n","import { useCallback, useState } from 'react';\n\nexport default function useToggle(initial = false): [boolean, () => void] {\n  const [state, setState] = useState(initial);\n  const toggle = useCallback(() => setState(val => !val), []);\n  return [state, toggle];\n}\n","import React, { useCallback, useMemo, useRef } from 'react';\nimport Project from './Project';\nimport randomGaussian from '../utils/randomGaussian';\nimport useInterval from '../hooks/useInterval';\nimport useToggle from '../hooks/useToggle';\n\nexport default function Gaussian() {\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n  const [running, toggleRunning] = useToggle(false);\n  const [step, reset] = useGaussian(canvasRef, 320, 60);\n\n  useInterval(step, 100, running);\n\n  return (\n    <Project title=\"Gaussian\">\n      <button onClick={toggleRunning}>{running ? 'Stop' : 'Go'}</button>\n      <button onClick={reset}>Clear</button>\n      <br />\n      <canvas className=\"b1 b-white\" width={640} ref={canvasRef} />\n    </Project>\n  );\n}\n\nfunction useGaussian(canvasRef: React.RefObject<HTMLCanvasElement>, mean: number, standardDeviation: number) {\n  const getRandom = useMemo(() => randomGaussian(mean, standardDeviation), [mean, standardDeviation]);\n\n  const step = useCallback(() => {\n    if (canvasRef.current) {\n      const canvas = canvasRef.current;\n      const context = canvas.getContext('2d')!;\n      context.beginPath();\n      context.fillStyle = 'rgba(255, 255, 255, .10)';\n      context.arc(getRandom(), canvas.height / 2, 16, 0, Math.PI * 2);\n      context.fill();\n    }\n  }, [canvasRef, getRandom]);\n\n  const reset = useCallback(() => {\n    if (canvasRef.current) {\n      const canvas = canvasRef.current;\n      const context = canvas.getContext('2d')!;\n\n      context.beginPath();\n      context.clearRect(0, 0, canvas.width, canvas.height);\n    }\n  }, [canvasRef]);\n\n  return [step, reset];\n}\n","import gaussian from 'gaussian';\n\nexport default function randomGaussian(mean = 0, standardDeviation = 1): () => number {\n  const distribution = gaussian(mean, standardDeviation * standardDeviation);\n\n  return function () {\n    return distribution.ppf(Math.random());\n  };\n}\n","import React, { useCallback, useRef } from 'react';\nimport { random } from 'lodash';\nimport Project from './Project';\nimport useInterval from '../hooks/useInterval';\nimport useToggle from '../hooks/useToggle';\n\nconst size = 320;\n\nexport default function RandomWalk() {\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n  const [walking, toggleWalking] = useToggle(false);\n  const [step, reset] = useRandomWalk(canvasRef, size);\n\n  useInterval(step, 100, walking);\n\n  return (\n    <Project title=\"Random Walk\">\n      <button onClick={toggleWalking}>{walking ? 'Stop' : 'Walk'}</button>\n      <button onClick={reset}>Clear</button>\n      <br />\n      <canvas className=\"b1 b-white\" height={size} ref={canvasRef} />\n    </Project>\n  );\n}\n\nfunction useRandomWalk(canvasRef: React.RefObject<HTMLCanvasElement>, size: number) {\n  const x = useRef(size / 2);\n  const y = useRef(size / 2);\n\n  const step = useCallback(() => {\n    if (canvasRef.current) {\n      const canvas = canvasRef.current;\n      const context = canvas.getContext('2d')!;\n\n      context.strokeStyle = 'white';\n      context.lineTo(x.current, y.current);\n      context.stroke();\n\n      x.current += random(-8, 8);\n      y.current += random(-8, 8);\n    }\n  }, [canvasRef]);\n\n  const reset = useCallback(() => {\n    if (canvasRef.current) {\n      const canvas = canvasRef.current;\n      const context = canvas.getContext('2d')!;\n\n      context.beginPath();\n      context.clearRect(0, 0, canvas.width, canvas.height);\n\n      x.current = size / 2;\n      y.current = size / 2;\n    }\n  }, [canvasRef, size]);\n\n  return [step, reset];\n}\n","import React from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport Home from './Home';\nimport Gaussian from './Gaussian';\nimport RandomWalk from './RandomWalk';\n\nconst routingBasename = process.env.NODE_ENV === 'production' ? 'nature-of-code' : undefined;\n\nexport default function App() {\n  return (\n    <main className=\"flex justify-center\">\n      <Router basename={routingBasename}>\n        <Route path=\"/\" exact component={Home} />\n        <Route path=\"/RandomWalk\" exact component={RandomWalk} />\n        <Route path=\"/Gaussian\" exact component={Gaussian} />\n      </Router>\n    </main>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport './index.css';\n\nReactDOM.render(React.createElement(App), document.getElementById('root'));\n"],"sourceRoot":""}