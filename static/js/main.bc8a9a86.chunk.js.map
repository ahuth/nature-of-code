{"version":3,"sources":["components/Home.tsx","components/Project.tsx","components/RandomWalk.tsx","hooks/useToggle.ts","hooks/useInterval.ts","components/App.tsx","index.ts"],"names":["Home","react_default","a","createElement","href","react_router_dom","to","Project","_ref","children","title","className","size","RandomWalk","canvasRef","useRef","_useToggle","initial","arguments","length","undefined","_useState","useState","_useState2","Object","slicedToArray","state","setState","useCallback","val","useToggle","_useToggle2","walking","toggleWalking","_useRandomWalk","x","y","step","current","canvas","context","getContext","strokeStyle","lineTo","stroke","random","reset","beginPath","clearRect","width","height","useRandomWalk","_useRandomWalk2","callback","delay","run","callbackRef","intervalRef","useEffect","window","setInterval","clearInterval","useInterval","onClick","ref","routingBasename","ReactDOM","render","React","basename","react_router","path","exact","component","document","getElementById"],"mappings":"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","file":"static/js/main.bc8a9a86.chunk.js","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\n\nexport default function Home() {\n  return (\n    <div>\n      <h1>The Nature of Code</h1>\n      <p>List of projects written as while following along with <a href=\"https://natureofcode.com/\">The Nature of Code</a>.</p>\n      <ol>\n        <li><Link to=\"/RandomWalk\">Random Walk</Link></li>\n      </ol>\n    </div>\n  );\n}\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\ntype Props = {\n  children: React.ReactNode,\n  title: React.ReactNode,\n};\n\nexport default function Project({ children, title }: Props) {\n  return (\n    <div>\n      <h1>{title}</h1>\n      <Link className=\"iblock mb2\" to=\"/\">Back to project list</Link>\n      {children}\n    </div>\n  );\n}\n","import React, { useCallback, useRef } from 'react';\nimport { random } from 'lodash';\nimport Project from './Project';\nimport useInterval from '../hooks/useInterval';\nimport useToggle from '../hooks/useToggle';\n\nconst size = 320;\n\nexport default function RandomWalk() {\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n  const [walking, toggleWalking] = useToggle(false);\n  const [step, reset] = useRandomWalk(canvasRef, size);\n\n  useInterval(step, 100, walking);\n\n  return (\n    <Project title=\"Random Walk\">\n      <div>\n        <button onClick={toggleWalking}>{walking ? 'Stop' : 'Walk'}</button>\n        <button onClick={reset}>Clear</button>\n        <br />\n        <canvas className=\"border-1 border-white\" height={size} ref={canvasRef} />\n      </div>\n    </Project>\n  );\n}\n\nfunction useRandomWalk(canvasRef: React.RefObject<HTMLCanvasElement>, size: number) {\n  const x = useRef(size / 2);\n  const y = useRef(size / 2);\n\n  const step = useCallback(() => {\n    if (canvasRef.current) {\n      const canvas = canvasRef.current;\n      const context = canvas.getContext('2d')!;\n\n      context.strokeStyle = 'white';\n      context.lineTo(x.current, y.current);\n      context.stroke();\n\n      x.current += random(-8, 8);\n      y.current += random(-8, 8);\n    }\n  }, [canvasRef]);\n\n  const reset = useCallback(() => {\n    if (canvasRef.current) {\n      const canvas = canvasRef.current;\n      const context = canvas.getContext('2d')!;\n\n      context.beginPath();\n      context.clearRect(0, 0, canvas.width, canvas.height);\n\n      x.current = size / 2;\n      y.current = size / 2;\n    }\n  }, [canvasRef, size]);\n\n  return [step, reset];\n}\n","import { useCallback, useState } from 'react';\n\nexport default function useToggle(initial = false): [boolean, () => void] {\n  const [state, setState] = useState(initial);\n  const toggle = useCallback(() => setState(val => !val), []);\n  return [state, toggle];\n}\n","import { useEffect, useRef } from 'react';\n\nexport default function useInterval(callback: () => void, delay: number, run = true) {\n  const callbackRef = useRef(callback);\n  const intervalRef = useRef<number | undefined>(undefined);\n\n  useEffect(() => {\n    callbackRef.current = callback;\n  }, [callback]);\n\n  useEffect(() => {\n    if (callbackRef.current && run) {\n      intervalRef.current = window.setInterval(callbackRef.current, delay);\n      return () => window.clearInterval(intervalRef.current);\n    }\n  }, [delay, run]);\n}\n","import React from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport Home from './Home';\nimport RandomWalk from './RandomWalk';\n\nconst routingBasename = process.env.NODE_ENV === 'production' ? 'nature-of-code' : undefined;\n\nexport default function App() {\n  return (\n    <main className=\"flex justify-center\">\n      <Router basename={routingBasename}>\n        <Route path=\"/\" exact component={Home} />\n        <Route path=\"/RandomWalk\" exact component={RandomWalk} />\n      </Router>\n    </main>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport './index.css';\n\nReactDOM.render(React.createElement(App), document.getElementById('root'));\n"],"sourceRoot":""}